name: Nightly-CI

on:
  schedule:
    - cron: '29 11 * * *'
  workflow_dispatch:

jobs:
  fetch:
    name: Fetch Today's News
    runs-on: ubuntu-latest
    outputs:
      today: ${{ steps.fetch-urls.today }}
      asset: ${{ steps.artifacts.asset }}

    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '16.x'

      - name: Install Dependencies
        run: npm install

      - name: Fetch URLs
        id: fetch-urls
        run: |
          npm run fetch
          echo "::set-output name=today::$(cat .today)"

      - name: Archive the Artifacts
        id: artifacts
        run: |
          TODAY=${{ steps.fetch-urls.outputs.today }}
          ASSET=nightly-$TODAY.tar.gz
          echo "TODAY=$TODAY"
          echo "ASSET=$ASSET"
          tar -czf nightly.tar.gz out/$TODAY/
          echo "::set-output name=asset::$(echo $ASSET)"
  # end of jobs.fetch

  release:
    name: Release Today's New
    runs-on: ubuntu-latest
    needs: [fetch]
    
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Nightly ${{ needs.fetch.outputs.asset }}
          body: |
            Nightly Fetch
              - Day by day
              - Time by time
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: nightly.tar.gz
          asset_name: ${{ needs.fetch.outputs.asset }}
          asset_content_type: application/octet-stream
  # end of jobs.release
